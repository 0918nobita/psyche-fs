(let
    (: make-counter (-> Int (-> Unit Int)))
    (Î» (: init Int)
        (let (: count (Ref Int)) (ref init)
            (Î» (: _ Unit) (mut count ((+ (deref count)) 1)))))
    (let (: counter (-> Unit Int)) (make-counter 0)
        (begin
            (counter #unit)
            (counter #unit)
            (counter #unit))))
