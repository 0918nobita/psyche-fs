{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "JSON schema for the FSharpLint configuration files.",
  "definitions": {
    "enabled": {
      "description": "Enable the linting rule",
      "type": "boolean"
    },
    "typedItemSpacing": {
      "description": "Check spacing around a typed item (FL0010)\nReference: https://fsprojects.github.io/FSharpLint/how-tos/rules/FL0010.html",
      "type": "object",
      "properties": {
        "enabled": {
          "$ref": "#/definitions/enabled"
        },
        "config": {
          "description": "Configuration for `typedItemSpacing` rule",
          "type": "object",
          "properties": {
            "typedItemStyle": {
              "description": "Specify style",
              "oneOf": [
                {
                  "description": "Don't put spaces, e.g. `(number:int)`",
                  "const": "NoSpaces"
                },
                {
                  "description": "Put one space after a colon, e.g. `(number: int)`",
                  "const": "SpaceAfter"
                },
                {
                  "description": "Put spaces around a colon, e.g. `(number : int)`",
                  "const": "SpacesAround"
                }
              ]
            }
          }
        }
      }
    },
    "typePrefixing": {
      "description": "Point out incorrect formatting for higher order type (FL0011)\nReference: https://fsprojects.github.io/FSharpLint/how-tos/rules/FL0011.html",
      "type": "object",
      "properties": {
        "enabled": {
          "$ref": "#/definitions/enabled"
        }
      }
    },
    "maxLinesInMatchLambdaFunction": {
      "description": "Point out that a match function is made up of more than a configurable number of lines (FL0023)\nReference: https://fsprojects.github.io/FSharpLint/how-tos/rules/FL0023.html",
      "type": "object",
      "properties": {
        "enabled": {
          "$ref": "#/definitions/enabled"
        },
        "config": {
          "description": "Configuration for `maxLinesInMatchLambdaFunction` rule",
          "type": "object",
          "properties": {
            "maxLines": { "type": "number" }
          }
        }
      }
    }
  },
  "type": "object",
  "properties": {
    "ignoreFiles": {
      "description": "Specify files that should be ignored",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "globals": {
      "description": "Global configuration",
      "type": "object",
      "properties": {
        "numIdentationSpaces": {
          "description": "Number of spaces used for identation",
          "type": "number"
        }
      }
    },
    "formatting": {
      "type": "object",
      "properties": {
        "typedItemSpacing": {
          "$ref": "#/definitions/typedItemSpacing"
        },
        "typePrefixing": {
          "$ref": "#/definitions/typePrefixing"
        }
      }
    },
    "conventions": {
      "type": "object",
      "properties": {
        "sourceLength": {
          "type": "object",
          "properties": {
            "maxLinesInMatchLambdaFunction": {
              "$ref": "#/definitions/maxLinesInMatchLambdaFunction"
            }
          }
        }
      }
    },
    "typedItemSpacing": {
      "$ref": "#/definitions/typedItemSpacing"
    },
    "typePrefixing": {
      "$ref": "#/definitions/typePrefixing"
    },
    "maxLinesInMatchLambdaFunction": {
      "$ref": "#/definitions/maxLinesInMatchLambdaFunction"
    }
  }
}
